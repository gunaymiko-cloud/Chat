let socket;
let currentUser = '';

function joinChat() {
    const username = document.getElementById('usernameInput').value.trim();
    
    if (username === '') {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è');
        return;
    }
    
    currentUser = username;
    
    // –ò–º–∏—Ç–∞—Ü–∏—è WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π WebSocket)
    socket = {
        send: function(data) {
            console.log('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', data);
            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            simulateMessageReceiving(data);
        }
    };
    
    document.getElementById('loginScreen').style.display = 'none';
    document.getElementById('chatMain').style.display = 'flex';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    addSystemMessage(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç, ${username}!`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    updateOnlineUsers();
}

function sendMessage() {
    const messageInput = document.getElementById('messageInput');
    const message = messageInput.value.trim();
    
    if (message === '') return;
    
    const messageData = {
        type: 'message',
        user: currentUser,
        text: message,
        time: new Date().toLocaleTimeString()
    };
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    socket.send(JSON.stringify(messageData));
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
    addMessage(currentUser, message, true);
    
    messageInput.value = '';
}

function addMessage(user, text, isOwn = false) {
    const messagesContainer = document.getElementById('chatMessages');
    const messageElement = document.createElement('div');
    messageElement.className = 'message';
    
    if (isOwn) {
        messageElement.style.background = '#e6fffa';
    }
    
    messageElement.innerHTML = `
        <div class="message-sender">
            ${user} <span class="message-time">${new Date().toLocaleTimeString()}</span>
        </div>
        <div class="message-text">${text}</div>
    `;
    
    messagesContainer.appendChild(messageElement);
    messagesContainer.scrollTop = messagesContainer.scrollHeight;
}

function addSystemMessage(text) {
    const messagesContainer = document.getElementById('chatMessages');
    const messageElement = document.createElement('div');
    messageElement.className = 'message';
    messageElement.style.background = '#fffaf0';
    messageElement.style.textAlign = 'center';
    messageElement.style.color = '#d69e2e';
    messageElement.innerHTML = `<em>${text}</em>`;
    
    messagesContainer.appendChild(messageElement);
    messagesContainer.scrollTop = messagesContainer.scrollHeight;
}

function updateOnlineUsers() {
    const usersList = document.getElementById('usersList');
    const onlineCount = document.getElementById('onlineCount');
    
    // –ò–º–∏—Ç–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const users = [currentUser, '–î—Ä—É–≥_1', '–î—Ä—É–≥_2', '–ü–æ–¥—Ä—É–≥–∞_1'];
    
    usersList.innerHTML = '';
    users.forEach(user => {
        const userElement = document.createElement('div');
        userElement.className = 'user-item';
        userElement.textContent = user === currentUser ? `üëë ${user} (–í—ã)` : `üë§ ${user}`;
        usersList.appendChild(userElement);
    });
    
    onlineCount.textContent = users.length;
}

// –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function simulateMessageReceiving(data) {
    const messageData = JSON.parse(data);
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç—ã –¥—Ä—É–∑–µ–π —á–µ—Ä–µ–∑ —Å–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è
    if (messageData.type === 'message') {
        setTimeout(() => {
            const responses = [
                '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?',
                '–û—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è!',
                '–Ø —Ç–æ–∂–µ —Ç—É—Ç)',
                '–ß—Ç–æ –Ω–æ–≤–æ–≥–æ?',
                '–î–∞–≤–∞–π –æ–±—Å—É–¥–∏–º —ç—Ç–æ'
            ];
            
            const randomResponse = responses[Math.floor(Math.random() * responses.length)];
            const randomUser = ['–î—Ä—É–≥_1', '–î—Ä—É–≥_2', '–ü–æ–¥—Ä—É–≥–∞_1'][Math.floor(Math.random() * 3)];
            
            addMessage(randomUser, randomResponse);
        }, 1000 + Math.random() * 3000);
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
document.getElementById('messageInput').addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
        sendMessage();
    }
});

document.getElementById('usernameInput').addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
        joinChat();
    }
});
